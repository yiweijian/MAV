In file included from [01m[K/usr/local/include/eigen3/Eigen/Core:254:0[m[K,
                 from [01m[K/usr/local/include/eigen3/Eigen/Geometry:4[m[K,
                 from [01m[K/home/nuc/yi/vins/vins_catkin_ws/src/mav_comm/mav_msgs/include/mav_msgs/common.h:29[m[K,
                 from [01m[K/home/nuc/yi/vins/vins_catkin_ws/src/mav_comm/mav_msgs/include/mav_msgs/conversions.h:40[m[K,
                 from [01m[K/home/nuc/yi/vins/vins_catkin_ws/src/waypoint_navigator/include/waypoint_navigator/waypoint_navigator_node.h:25[m[K,
                 from [01m[K/home/nuc/yi/vins/vins_catkin_ws/src/waypoint_navigator/src/waypoint_navigator_node.cpp:33[m[K:
/usr/local/include/eigen3/Eigen/src/Core/GeneralProduct.h: In instantiation of â€˜[01m[Kconst typename Eigen::ProductReturnType<Derived, OtherDerived>::Type Eigen::MatrixBase<Derived>::operator*(const Eigen::MatrixBase<OtherDerived>&) const [with OtherDerived = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, 3, 3> > >; Derived = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, 3, 4> > >; typename Eigen::ProductReturnType<Derived, OtherDerived>::Type = Eigen::CoeffBasedProduct<Eigen::Matrix<double, 3, 4>, Eigen::Matrix<double, 3, 3>, 6>][m[Kâ€™:
[01m[K/home/nuc/yi/vins/vins_catkin_ws/src/waypoint_navigator/src/waypoint_navigator_node.cpp:74:50:[m[K   required from here
[01m[K/usr/local/include/eigen3/Eigen/src/Core/util/StaticAssert.h:32:40:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: INVALID_MATRIX_PRODUCT
     #define EIGEN_STATIC_ASSERT(X,MSG) [01;31m[Ks[m[Ktatic_assert(X,#MSG);
                                        [01;31m[K^[m[K
[01m[K/usr/local/include/eigen3/Eigen/src/Core/util/StaticAssert.h:32:40:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KEIGEN_STATIC_ASSERT[m[Kâ€™
     #define EIGEN_STATIC_ASSERT(X,MSG) [01;36m[Kstatic_assert[m[K(X,#MSG);
                                        [01;36m[K^~~~~~~~~~~~~[m[K
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of â€˜[01m[KDerived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 4, 1>][m[Kâ€™:
[01m[K/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:414:30:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 4, 1>][m[Kâ€™
[01m[K/usr/local/include/eigen3/Eigen/src/Core/Assign.h:527:123:[m[K   required from â€˜[01m[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, false>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Matrix<double, 4, 1>; OtherDerived = Eigen::Matrix<double, 3, 1>][m[Kâ€™
[01m[K/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:653:72:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::_set_noalias(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Matrix<double, 3, 1>; Derived = Eigen::Matrix<double, 4, 1>][m[Kâ€™
[01m[K/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:635:113:[m[K   required from â€˜[01m[Kvoid Eigen::PlainObjectBase<Derived>::_set_selector(const OtherDerived&, const Eigen::internal::true_type&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<Eigen::Matrix<double, 3, 4>, Eigen::Matrix<double, 3, 3>, 6> >, const Eigen::Matrix<double, 3, 1>&, 6>; Derived = Eigen::Matrix<double, 4, 1>][m[Kâ€™
[01m[K/usr/local/include/eigen3/Eigen/src/Core/PlainObjectBase.h:630:20:[m[K   required from â€˜[01m[KDerived& Eigen::PlainObjectBase<Derived>::_set(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<Eigen::Matrix<double, 3, 4>, Eigen::Matrix<double, 3, 3>, 6> >, const Eigen::Matrix<double, 3, 1>&, 6>; Derived = Eigen::Matrix<double, 4, 1>][m[Kâ€™
[01m[K/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:172:24:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>& Eigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::operator=(const Eigen::MatrixBase<OtherDerived>&) [with OtherDerived = Eigen::CoeffBasedProduct<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::CoeffBasedProduct<Eigen::Matrix<double, 3, 4>, Eigen::Matrix<double, 3, 3>, 6> >, const Eigen::Matrix<double, 3, 1>&, 6>; _Scalar = double; int _Rows = 4; int _Cols = 1; int _Options = 0; int _MaxRows = 4; int _MaxCols = 1][m[Kâ€™
[01m[K/home/nuc/yi/vins/vins_catkin_ws/src/waypoint_navigator/src/waypoint_navigator_node.cpp:74:54:[m[K   required from here
[01m[K/usr/local/include/eigen3/Eigen/src/Core/util/StaticAssert.h:32:40:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES
     #define EIGEN_STATIC_ASSERT(X,MSG) [01;31m[Ks[m[Ktatic_assert(X,#MSG);
                                        [01;31m[K^[m[K
[01m[K/usr/local/include/eigen3/Eigen/src/Core/util/StaticAssert.h:32:40:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KEIGEN_STATIC_ASSERT[m[Kâ€™
     #define EIGEN_STATIC_ASSERT(X,MSG) [01;36m[Kstatic_assert[m[K(X,#MSG);
                                        [01;36m[K^~~~~~~~~~~~~[m[K
[01m[K/usr/local/include/eigen3/Eigen/src/Core/Assign.h:499:3:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KEIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE[m[Kâ€™
   [01;36m[KE[m[KIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE(Derived,OtherDerived)
   [01;36m[K^[m[K
/usr/local/include/eigen3/Eigen/src/Core/Assign.h: In instantiation of â€˜[01m[KDerived& Eigen::DenseBase<Derived>::lazyAssign(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::Transpose<const Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> > >; Derived = Eigen::Block<Eigen::Matrix<double, 3, 4>, 1, 4, false>][m[Kâ€™:
[01m[K/usr/local/include/eigen3/Eigen/src/Core/Assign.h:537:125:[m[K   required from â€˜[01m[Kstatic Derived& Eigen::internal::assign_selector<Derived, OtherDerived, false, true>::run(Derived&, const OtherDerived&) [with Derived = Eigen::Block<Eigen::Matrix<double, 3, 4>, 1, 4, false>; OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> >][m[Kâ€™
[01m[K/usr/local/include/eigen3/Eigen/src/Core/Assign.h:571:62:[m[K   required from â€˜[01m[KDerived& Eigen::MatrixBase<Derived>::operator=(const Eigen::DenseBase<OtherDerived>&) [with OtherDerived = Eigen::CwiseUnaryOp<Eigen::internal::scalar_multiple_op<double>, const Eigen::Matrix<double, 3, 1> >; Derived = Eigen::Block<Eigen::Matrix<double, 3, 4>, 1, 4, false>][m[Kâ€™
[01m[K/usr/local/include/eigen3/Eigen/src/LU/Inverse.h:136:17:[m[K   required from â€˜[01m[Kvoid Eigen::internal::compute_inverse_size3_helper(const MatrixType&, const typename ResultType::Scalar&, const Eigen::Matrix<typename ResultType::Scalar, 3, 1>&, ResultType&) [with MatrixType = Eigen::Matrix<double, 3, 4>; ResultType = Eigen::Matrix<double, 3, 4>; typename ResultType::Scalar = double][m[Kâ€™
[01m[K/usr/local/include/eigen3/Eigen/src/LU/Inverse.h:157:33:[m[K   required from â€˜[01m[Kstatic void Eigen::internal::compute_inverse<MatrixType, ResultType, 3>::run(const MatrixType&, ResultType&) [with MatrixType = Eigen::Matrix<double, 3, 4>; ResultType = Eigen::Matrix<double, 3, 4>][m[Kâ€™
[01m[K/usr/local/include/eigen3/Eigen/src/LU/Inverse.h:296:56:[m[K   required from â€˜[01m[Kvoid Eigen::internal::inverse_impl<MatrixType>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 4>; MatrixType = Eigen::Matrix<double, 3, 4>][m[Kâ€™
[01m[K/usr/local/include/eigen3/Eigen/src/Core/ReturnByValue.h:61:7:[m[K   required from â€˜[01m[Kvoid Eigen::ReturnByValue<Derived>::evalTo(Dest&) const [with Dest = Eigen::Matrix<double, 3, 4>; Derived = Eigen::internal::inverse_impl<Eigen::Matrix<double, 3, 4> >][m[Kâ€™
[01m[K/usr/local/include/eigen3/Eigen/src/Core/Matrix.h:311:7:[m[K   required from â€˜[01m[KEigen::Matrix<_Scalar, _Rows, _Cols, _Options, _MaxRows, _MaxCols>::Matrix(const Eigen::ReturnByValue<OtherDerived>&) [with OtherDerived = Eigen::internal::inverse_impl<Eigen::Matrix<double, 3, 4> >; _Scalar = double; int _Rows = 3; int _Cols = 4; int _Options = 0; int _MaxRows = 3; int _MaxCols = 4][m[Kâ€™
[01m[K/usr/local/include/eigen3/Eigen/src/Core/DenseBase.h:365:48:[m[K   required from â€˜[01m[KEigen::DenseBase<Derived>::EvalReturnType Eigen::DenseBase<Derived>::eval() const [with Derived = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, 3, 4> > >; Eigen::DenseBase<Derived>::EvalReturnType = const Eigen::Matrix<double, 3, 4>][m[Kâ€™
[01m[K/usr/local/include/eigen3/Eigen/src/Core/IO.h:245:32:[m[K   required from â€˜[01m[Kstd::ostream& Eigen::operator<<(std::ostream&, const Eigen::DenseBase<Derived>&) [with Derived = Eigen::ReturnByValue<Eigen::internal::inverse_impl<Eigen::Matrix<double, 3, 4> > >; std::ostream = std::basic_ostream<char>][m[Kâ€™
[01m[K/home/nuc/yi/vins/vins_catkin_ws/src/waypoint_navigator/src/waypoint_navigator_node.cpp:75:33:[m[K   required from here
[01m[K/usr/local/include/eigen3/Eigen/src/Core/util/StaticAssert.h:32:40:[m[K [01;31m[Kerror: [m[Kstatic assertion failed: YOU_MIXED_MATRICES_OF_DIFFERENT_SIZES
     #define EIGEN_STATIC_ASSERT(X,MSG) [01;31m[Ks[m[Ktatic_assert(X,#MSG);
                                        [01;31m[K^[m[K
[01m[K/usr/local/include/eigen3/Eigen/src/Core/util/StaticAssert.h:32:40:[m[K [01;36m[Knote: [m[Kin definition of macro â€˜[01m[KEIGEN_STATIC_ASSERT[m[Kâ€™
     #define EIGEN_STATIC_ASSERT(X,MSG) [01;36m[Kstatic_assert[m[K(X,#MSG);
                                        [01;36m[K^~~~~~~~~~~~~[m[K
[01m[K/usr/local/include/eigen3/Eigen/src/Core/Assign.h:499:3:[m[K [01;36m[Knote: [m[Kin expansion of macro â€˜[01m[KEIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE[m[Kâ€™
   [01;36m[KE[m[KIGEN_STATIC_ASSERT_SAME_MATRIX_SIZE(Derived,OtherDerived)
   [01;36m[K^[m[K
make[2]: *** [CMakeFiles/waypoint_navigator_node.dir/src/waypoint_navigator_node.cpp.o] é”™è¯¯ 1
make[1]: *** [CMakeFiles/waypoint_navigator_node.dir/all] é”™è¯¯ 2
make: *** [all] é”™è¯¯ 2
